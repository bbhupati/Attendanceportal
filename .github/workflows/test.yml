name: Build and deploy ASP.NET Core app to Azure Web App

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true

    - name: Restore dependencies
      run: dotnet restore

    - name: Build with dotnet
      run: dotnet build --configuration Release

    - name: Publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/Attendanceportal

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: Attendanceportal
        path: ${{env.DOTNET_ROOT}}/Attendanceportal

  deploy:
    needs: build
    runs-on: windows-latest
    environment:
      name: 'production'
      url: ${{ secrets.WEBAPP_URL }}

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: myapp

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'Attendanceportal'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: './Attendanceportal'



# name: Deploy ASP.NET MVC App deploy to Azure Web Application

# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - '*'

# env:
#   AZURE_WEBAPP_NAME: AttendancePortal    # set this to your application's name
#   AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
#   NUGET_VERSION: '5.3.1'           # set this to the dot net version to use

# jobs:
#   build-and-deploy:
#     runs-on: windows-latest
#     environment: dev
#     steps:

#     # checkout the repo
#     - uses: actions/checkout@master  
    
#     - name: Print GITHUB_WORKSPACE
#       run: Write-Host $GITHUB_WORKSPACE
    
    
#     - name: Install Nuget
#       uses: nuget/setup-nuget@v1
#       with:
#         nuget-version: ${{ env.NUGET_VERSION}}
    
#     - name: NuGet to restore dependencies as well as project-specific tools that are specified in the project file.
#       run: |
#         write-host $GITHUB_REF
#         write-host $GITHUB_REPOSITORY
#         write-host $pwd
#         write-host "clsoing pwd"
#         write-host "checking dir"
#         dir 
#         write-host "closing dir"
#         cd Attendanceportal
#         write-host $pwd
#         dir
        
#         # cd Attendanceportal
#         # pwd
#         # ls
#         # nuget restore
  
#     - name: Add msbuild to PATH
#       uses: microsoft/setup-msbuild@v1.0.0
    
#     - name: Run MSBuild
#       run: msbuild .\AttendancePortal.sln
       
#     - name: 'Run Azure webapp deploy action using publish profile credentials'
#       uses: azure/webapps-deploy@v2
#       with: 
#         app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
#         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
#         package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/AttendancePortal/'
  
#   # For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
